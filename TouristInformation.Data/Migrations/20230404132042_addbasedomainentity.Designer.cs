// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TouristInformation.Data.Models;

#nullable disable

namespace TouristInformation.Migrations
{
    [DbContext(typeof(TouristInformationContext))]
    [Migration("20230404132042_addbasedomainentity")]
    partial class addbasedomainentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TouristInformation.Models.Attraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttrName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("attr_name");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("category");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("city");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<double>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<double>("RecommendedAge")
                        .HasColumnType("float")
                        .HasColumnName("recommended_age");

                    b.HasKey("Id")
                        .HasName("PK__attracti__3213E83FBC679E51");

                    b.ToTable("attractions", (string)null);
                });

            modelBuilder.Entity("TouristInformation.Models.ReservedTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttrId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("attr_id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("guest_name");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__reserved__3213E83F59A1ABD8");

                    b.HasIndex("AttrId");

                    b.ToTable("reserved_tickets", (string)null);
                });

            modelBuilder.Entity("TouristInformation.Models.ReservedTicket", b =>
                {
                    b.HasOne("TouristInformation.Models.Attraction", "Attr")
                        .WithMany("ReservedTickets")
                        .HasForeignKey("AttrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__reserved___attr___4BAC3F29");

                    b.Navigation("Attr");
                });

            modelBuilder.Entity("TouristInformation.Models.Attraction", b =>
                {
                    b.Navigation("ReservedTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
